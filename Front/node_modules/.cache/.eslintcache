[{"E:\\NiNi\\api_test\\API_Front_Back\\Front\\src\\index.js":"1","E:\\NiNi\\api_test\\API_Front_Back\\Front\\src\\App.js":"2","E:\\NiNi\\api_test\\API_Front_Back\\Front\\src\\reportWebVitals.js":"3","E:\\NiNi\\api_test\\API_Front_Back\\Front\\src\\components\\NavbarApp.jsx":"4","E:\\NiNi\\api_test\\API_Front_Back\\Front\\src\\router\\index.js":"5","E:\\NiNi\\api_test\\API_Front_Back\\Front\\src\\components\\Historic.jsx":"6","E:\\NiNi\\api_test\\API_Front_Back\\Front\\src\\components\\Scan.jsx":"7","E:\\NiNi\\api_test\\API_Front_Back\\Front\\src\\components\\Home.jsx":"8","E:\\NiNi\\api_test\\API_Front_Back\\Front\\src\\components\\Category.jsx":"9"},{"size":850,"mtime":1640476747787,"results":"10","hashOfConfig":"11"},{"size":371,"mtime":1640476747783,"results":"12","hashOfConfig":"11"},{"size":375,"mtime":1639754109399,"results":"13","hashOfConfig":"11"},{"size":585,"mtime":1640476747786,"results":"14","hashOfConfig":"11"},{"size":468,"mtime":1640476747787,"results":"15","hashOfConfig":"11"},{"size":11108,"mtime":1640476747785,"results":"16","hashOfConfig":"11"},{"size":3747,"mtime":1640498519285,"results":"17","hashOfConfig":"11"},{"size":7742,"mtime":1640497998526,"results":"18","hashOfConfig":"11"},{"size":6436,"mtime":1640476747784,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"15yjn04",{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"22"},"E:\\NiNi\\api_test\\API_Front_Back\\Front\\src\\index.js",[],["42","43"],"E:\\NiNi\\api_test\\API_Front_Back\\Front\\src\\App.js",["44"],"import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { router } from './router'\r\nimport NavbarApp from './components/NavbarApp';\r\n\r\nconst App = () => <main>\r\n  <NavbarApp />\r\n  {\r\n    router.map( (props, index) => \r\n     <Route path={props.pathname} component={props.components} key={index} />\r\n    )\r\n  }\r\n</main>\r\n\r\nexport default App","E:\\NiNi\\api_test\\API_Front_Back\\Front\\src\\reportWebVitals.js",[],"E:\\NiNi\\api_test\\API_Front_Back\\Front\\src\\components\\NavbarApp.jsx",[],"E:\\NiNi\\api_test\\API_Front_Back\\Front\\src\\router\\index.js",[],"E:\\NiNi\\api_test\\API_Front_Back\\Front\\src\\components\\Historic.jsx",["45","46","47","48","49","50"],"import { React, useState, useEffect } from \"react\"\r\nimport axios from \"axios\"\r\n\r\nimport {\r\n    Container,\r\n    Row,\r\n    Col,\r\n    InputGroup,\r\n    FormControl,\r\n    Button,\r\n    Card,\r\n    Modal,\r\n    Form,\r\n    ListGroup,\r\n    ListGroupItem\r\n} from \"react-bootstrap\"\r\n\r\nexport default function Historic() {\r\n    const [code, setCode] = useState('')\r\n    const [products, setProducts] = useState([])\r\n    const [product, setProduct] = useState({})\r\n    const [currentCateg, setCurrentCategs] = useState({})\r\n    const [categs, setCategs] = useState([])\r\n\r\n\r\n    const [formAjout, setFormAjout] = useState({})\r\n\r\n    const [show, setShow] = useState(false);\r\n\r\n    useEffect(() => {\r\n        getProducts()\r\n        getCategories()\r\n    }, [])\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    function search() {\r\n\r\n    }\r\n\r\n    function getCategories() {\r\n        axios.get(\"http://localhost:3001/api/category\").then((datas) => {\r\n            setCategs(datas.data)\r\n        })\r\n    }\r\n\r\n    function getProducts() {\r\n        let url = `http://localhost:3001/api/product`\r\n\r\n        axios.get(url).then(data => {\r\n            console.log(data?.data)\r\n            setProducts(data?.data)\r\n        })\r\n    }\r\n\r\n    function deleteProduct(product) {\r\n        let url = `http://localhost:3001/api/product/${product._id}`\r\n\r\n        axios.delete(url).then(data => {\r\n            console.log(data?.data)\r\n\r\n            alert('Produit supprimé')\r\n            getProducts()\r\n        })\r\n    }\r\n\r\n    function updateProduct(p) {\r\n        console.log('p', p)\r\n        const tmp = {\r\n            brandName: p?.brandName,\r\n            name: p?.name,\r\n            image: p?.image,\r\n            nutriGrade: p?.nutriGrade,\r\n            category: p?.category?._id\r\n        }\r\n        //console.log(tmp)\r\n        setFormAjout(p)\r\n        setProduct(p)\r\n        // console.log('pro', product)\r\n        handleShow()\r\n    }\r\n\r\n    function update(e, product) {\r\n       \r\n        let url = `http://localhost:3001/api/product/${product._id}`\r\n\r\n        const { name, brandName, image,nutriGrade, category } = { ...formAjout }\r\n\r\n        axios.put(url, {\r\n            name,\r\n            brandName,\r\n            image,\r\n            nutriGrade,\r\n            category\r\n        }).then(data => {\r\n            console.log(data?.data)\r\n            setProducts(data?.data)\r\n        })\r\n        getProducts()\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Container>\r\n                <Row>\r\n                    <Col md=\"6\" className=\"mt-3\">\r\n                        <h3>Chercher</h3>\r\n                        <hr />\r\n\r\n                        <InputGroup className=\"mb-3\">\r\n                            <FormControl\r\n                                placeholder=\"Chercher un produit\"\r\n                                value={code}\r\n                                onChange={(e) => setCode(e.target.value)}\r\n                            />\r\n                            <InputGroup.Text>\r\n                                Search {code}\r\n                            </InputGroup.Text>\r\n                        </InputGroup>\r\n\r\n                        <Button variant=\"info\" onClick={search}>\r\n                            Chercher un produit\r\n                    </Button>\r\n                    </Col>\r\n\r\n                    <Col md=\"6\" className=\"mt-3\">\r\n                        <h3>Par catégorie</h3>\r\n                        <hr />\r\n\r\n                        <Form.Select\r\n                            className=\"mb-3\"\r\n                            name=\"category\"\r\n                            value={formAjout.category}\r\n                            onChange={(e) => {\r\n                            let tmp = { ...formAjout }\r\n                            tmp.category = e.target.value\r\n                            setFormAjout(tmp)\r\n                            }}\r\n                        >\r\n                            {categs.map((categ) => {\r\n                            return (\r\n                                <option key={categ._id} value={categ._id}>\r\n                                {categ.name}\r\n                                </option>\r\n                            )\r\n                            })}\r\n                        </Form.Select>\r\n\r\n                        <Button variant=\"info\" onClick={search}>\r\n                            Chercher par catégorie\r\n                    </Button>\r\n                    </Col>\r\n\r\n                </Row>\r\n            </Container>\r\n\r\n            <Container>\r\n                <h3 className=\"mt-3\" >Liste des produits : {products.length}</h3>\r\n                {products.length > 0 &&\r\n                    products.map((product) =>\r\n                        <Row mt={3}>\r\n                            <Col className=\"mt-1\" >\r\n                                <div>\r\n                                    {product.brandName} - {product.name}\r\n                                </div>\r\n                                <div>\r\n                                    Nutrigrade : {product.nutriGrade} - Catégorie : {product?.category?.name}\r\n                                </div>\r\n                            </Col>\r\n                            <Col className=\"mt-1\">\r\n                                <Button onClick={() => deleteProduct(product)} className=\"ml-5\" variant=\"danger\">\r\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-trash\" viewBox=\"0 0 16 16\">\r\n                                        <path d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z\" />\r\n                                        <path fillRule=\"evenodd\" d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\" />\r\n                                    </svg>\r\n                                </Button>\r\n                            </Col>\r\n                            <Col className=\"mt-1\">\r\n                                <Button onClick={() => updateProduct(product)} variant=\"info\">\r\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-pencil\" viewBox=\"0 0 16 16\">\r\n                                        <path d=\"M12.146.146a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1 0 .708l-10 10a.5.5 0 0 1-.168.11l-5 2a.5.5 0 0 1-.65-.65l2-5a.5.5 0 0 1 .11-.168l10-10zM11.207 2.5 13.5 4.793 14.793 3.5 12.5 1.207 11.207 2.5zm1.586 3L10.5 3.207 4 9.707V10h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.293l6.5-6.5zm-9.761 5.175-.106.106-1.528 3.821 3.821-1.528.106-.106A.5.5 0 0 1 5 12.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.468-.325z\" />\r\n                                    </svg>\r\n                                </Button>\r\n                            </Col>\r\n                        </Row>\r\n                    )\r\n                }\r\n            </Container>\r\n\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Modifier le produit product</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form onSubmit={(e) => update(e, product)}>\r\n                        <Form.Group className=\"mb-3\">\r\n                            <Form.Label>Marque</Form.Label>\r\n                            <Form.Control\r\n                                value={formAjout.brandName}\r\n                                type=\"nom\"\r\n                                placeholder=\"Catégorie\"\r\n                                required\r\n                                onChange={(e) => {\r\n                                    let tmp = { ...formAjout }\r\n                                    tmp.brandName = e.target.value\r\n                                    setFormAjout(tmp)\r\n                                }}\r\n                            />\r\n                            <Form.Label>Nom</Form.Label>\r\n                            <Form.Control\r\n                                value={formAjout.name}\r\n                                type=\"nom\"\r\n                                placeholder=\"Nom\"\r\n                                required\r\n                                onChange={(e) => {\r\n                                    let tmp = { ...formAjout }\r\n                                    tmp.name = e.target.value\r\n                                    setFormAjout(tmp)\r\n                                }}\r\n                            />\r\n                            <Form.Label>Url de l'image</Form.Label>\r\n                            <Form.Control\r\n                                value={formAjout.image}\r\n                                type=\"nom\"\r\n                                placeholder=\"ex : https://\"\r\n                                required\r\n                                onChange={(e) => {\r\n                                    let tmp = { ...formAjout }\r\n                                    tmp.image = e.target.value\r\n                                    setFormAjout(tmp)\r\n                                }}\r\n                            />\r\n\r\n                            <Form.Label>Nutrigrade</Form.Label>\r\n                                <Form.Control\r\n                                    value={formAjout.nutriGrade}\r\n                                    type=\"nom\"\r\n                                    placeholder=\"ex : A\"\r\n                                    required\r\n                                    onChange={(e) => {\r\n                                        let tmp = { ...formAjout }\r\n                                        tmp.nutriGrade = e.target.value\r\n                                        setFormAjout(tmp)\r\n                                    }}\r\n                                />\r\n                        <Form.Label>Catégorie</Form.Label>\r\n                        <Form.Select\r\n                            name=\"category\"\r\n                            value={formAjout.category}\r\n                            onChange={(e) => {\r\n                            let tmp = { ...formAjout }\r\n                            tmp.category = e.target.value\r\n                            setFormAjout(tmp)\r\n                            }}\r\n                        >\r\n                            {categs.map((categ) => {\r\n                            return (\r\n                                <option key={categ._id} value={categ._id}>\r\n                                {categ.name}\r\n                                </option>\r\n                            )\r\n                            })}\r\n                        </Form.Select>\r\n\r\n                        </Form.Group>\r\n                        <Button variant=\"primary\" type=\"submit\">\r\n                            Modifier\r\n                        </Button>\r\n                    </Form>\r\n                </Modal.Body>\r\n            </Modal>\r\n\r\n        </>\r\n    )\r\n}","E:\\NiNi\\api_test\\API_Front_Back\\Front\\src\\components\\Scan.jsx",["51","52","53","54"],"E:\\NiNi\\api_test\\API_Front_Back\\Front\\src\\components\\Home.jsx",[],"E:\\NiNi\\api_test\\API_Front_Back\\Front\\src\\components\\Category.jsx",["55","56","57","58","59","60","61","62"],"import { React, useState, useEffect } from \"react\"\r\n//import BarcodeScannerComponent from \"react-qr-barcode-scanner\";\r\n\r\nimport axios from \"axios\"\r\n\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  InputGroup,\r\n  FormControl,\r\n  Form,\r\n  Button,\r\n  Modal,\r\n  Card,\r\n  ListGroup,\r\n  ListGroupItem\r\n} from \"react-bootstrap\"\r\n\r\nexport default function Category() {\r\n  const [foods, setFoods] = useState({})\r\n  const [formAjout, setFormAjout] = useState({})\r\n  const [categs, setCategs] = useState([])\r\n  const [currentCateg, setCurrentCategs] = useState({})\r\n  const [show, setShow] = useState(false);\r\n\r\n  //const [camView, setCamView] = useState(\"user\");\r\n\r\n\r\n  useEffect(() => {\r\n   getCategories()\r\n  }, [])\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  function getCategories() {\r\n    let url = `http://localhost:3001/api/category`\r\n\r\n    axios.get(url).then( data => {\r\n      console.log(data)\r\n      setCategs(data?.data)\r\n    })\r\n  }\r\n\r\n  function addCateg(event) {\r\n    event.preventDefault()\r\n    const { name } = { ...formAjout }\r\n    let url = `http://localhost:3001/api/category`\r\n\r\n    axios.post(url, {\r\n        name\r\n    }).then(res => {\r\n        alert('Catégorie ajouté avec succés')\r\n        getCategories()\r\n    })\r\n  }\r\n\r\n  function deleteCateg(categ) {\r\n      console.log(categ)\r\n    const { name } = { ...formAjout }\r\n    let url = `http://localhost:3001/api/category/${categ._id}`\r\n\r\n    axios.delete(url).then(res => {\r\n        alert('Catégorie supprimé avec succés')\r\n        getCategories()\r\n    })\r\n  }\r\n\r\n  function updateCateg(categ) {\r\n    console.log(categ)\r\n    const tmp = {\r\n        name: categ.name\r\n    }\r\n    setFormAjout(tmp)\r\n    setCurrentCategs(categ)\r\n    handleShow()\r\n    console.log(currentCateg)\r\n\r\n}\r\n\r\nfunction update(categ) {\r\n    console.log(categ)\r\n    const { name } = { ...formAjout }\r\n    let url = `http://localhost:3001/api/category/${categ._id}`\r\n\r\n    axios.put(url, {\r\n        name\r\n    }).then(res => {\r\n        alert('Catégorie modifié avec succés')\r\n        getCategories()\r\n    })\r\n}\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n\r\n      <Container>\r\n        <Row mt={5}>\r\n            {!show && \r\n                <Col md=\"6\" className=\"mt-3\">\r\n                <h3>Ajouter une catégorie</h3>\r\n                <hr />\r\n                <Form onSubmit={(e) => addCateg(e)}>\r\n    \r\n                  <Form.Group className=\"mb-3\">\r\n                    <Form.Label>Nom</Form.Label>\r\n                    <Form.Control\r\n                      value={formAjout.name}\r\n                      type=\"nom\"\r\n                      placeholder=\"Catégorie\"\r\n                      required\r\n                      onChange={(e) => {\r\n                        let tmp = { ...formAjout }\r\n                        tmp.name = e.target.value\r\n                        setFormAjout(tmp)\r\n                      }}\r\n                    />\r\n                  </Form.Group>\r\n    \r\n                  <Button variant=\"info\" type=\"submit\">\r\n                    Enregistrer\r\n                  </Button>\r\n                </Form>\r\n              </Col>\r\n            }\r\n                  \r\n          <Col md=\"6\" className=\"mt-3\">\r\n            <h3>Liste des produits</h3>\r\n            <hr />\r\n            \r\n            {categs.length > 0 && \r\n                categs.map((categ) => \r\n                    <Row mt={3}>\r\n                        <Col className=\"mt-1\" >\r\n                            <span >{categ.name}</span>\r\n                        </Col>\r\n                        <Col className=\"mt-1\">\r\n                            <Button onClick={() => deleteCateg(categ)} className=\"ml-5\" variant=\"danger\">\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-trash\" viewBox=\"0 0 16 16\">\r\n                                <path d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z\"/>\r\n                                <path fill-rule=\"evenodd\" d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\"/>\r\n                            </svg>\r\n                            </Button>\r\n                        </Col>\r\n                        <Col className=\"mt-1\">\r\n                            <Button onClick={() => updateCateg(categ)} variant=\"info\">\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-pencil\" viewBox=\"0 0 16 16\">\r\n                                <path d=\"M12.146.146a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1 0 .708l-10 10a.5.5 0 0 1-.168.11l-5 2a.5.5 0 0 1-.65-.65l2-5a.5.5 0 0 1 .11-.168l10-10zM11.207 2.5 13.5 4.793 14.793 3.5 12.5 1.207 11.207 2.5zm1.586 3L10.5 3.207 4 9.707V10h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.293l6.5-6.5zm-9.761 5.175-.106.106-1.528 3.821 3.821-1.528.106-.106A.5.5 0 0 1 5 12.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.468-.325z\"/>\r\n                            </svg>\r\n                            </Button>\r\n                        </Col>\r\n                    </Row>\r\n                )\r\n            }\r\n            \r\n          </Col>        \r\n        </Row>\r\n      </Container>\r\n\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n        <Modal.Title>Modifier la catégorie {currentCateg?.name}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n            <Form onSubmit={() => update(currentCateg)}>\r\n                <Form.Group className=\"mb-3\">\r\n                <Form.Label>Nom</Form.Label>\r\n                <Form.Control\r\n                    value={formAjout.name}\r\n                    type=\"nom\"\r\n                    placeholder=\"Catégorie\"\r\n                    required\r\n                    onChange={(e) => {\r\n                    let tmp = { ...formAjout }\r\n                    tmp.name = e.target.value\r\n                    setFormAjout(tmp)\r\n                    }}\r\n                />\r\n                 </Form.Group>\r\n                 <Button variant=\"primary\" type=\"submit\">\r\n                    Modifier\r\n                </Button>\r\n            </Form>        \r\n        </Modal.Body>\r\n      </Modal>\r\n\r\n    </div>\r\n  )\r\n}\r\n",{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":2,"column":17,"nodeType":"69","messageId":"70","endLine":2,"endColumn":25},{"ruleId":"67","severity":1,"message":"71","line":11,"column":5,"nodeType":"69","messageId":"70","endLine":11,"endColumn":9},{"ruleId":"67","severity":1,"message":"72","line":14,"column":5,"nodeType":"69","messageId":"70","endLine":14,"endColumn":14},{"ruleId":"67","severity":1,"message":"73","line":15,"column":5,"nodeType":"69","messageId":"70","endLine":15,"endColumn":18},{"ruleId":"67","severity":1,"message":"74","line":22,"column":12,"nodeType":"69","messageId":"70","endLine":22,"endColumn":24},{"ruleId":"67","severity":1,"message":"75","line":22,"column":26,"nodeType":"69","messageId":"70","endLine":22,"endColumn":42},{"ruleId":"67","severity":1,"message":"76","line":70,"column":15,"nodeType":"69","messageId":"70","endLine":70,"endColumn":18},{"ruleId":"67","severity":1,"message":"77","line":9,"column":5,"nodeType":"69","messageId":"70","endLine":9,"endColumn":15},{"ruleId":"67","severity":1,"message":"78","line":10,"column":5,"nodeType":"69","messageId":"70","endLine":10,"endColumn":16},{"ruleId":"67","severity":1,"message":"79","line":13,"column":5,"nodeType":"69","messageId":"70","endLine":13,"endColumn":9},{"ruleId":"80","severity":1,"message":"81","line":66,"column":31,"nodeType":"82","messageId":"83","endLine":66,"endColumn":33},{"ruleId":"67","severity":1,"message":"77","line":10,"column":3,"nodeType":"69","messageId":"70","endLine":10,"endColumn":13},{"ruleId":"67","severity":1,"message":"78","line":11,"column":3,"nodeType":"69","messageId":"70","endLine":11,"endColumn":14},{"ruleId":"67","severity":1,"message":"71","line":15,"column":3,"nodeType":"69","messageId":"70","endLine":15,"endColumn":7},{"ruleId":"67","severity":1,"message":"72","line":16,"column":3,"nodeType":"69","messageId":"70","endLine":16,"endColumn":12},{"ruleId":"67","severity":1,"message":"73","line":17,"column":3,"nodeType":"69","messageId":"70","endLine":17,"endColumn":16},{"ruleId":"67","severity":1,"message":"84","line":21,"column":10,"nodeType":"69","messageId":"70","endLine":21,"endColumn":15},{"ruleId":"67","severity":1,"message":"85","line":21,"column":17,"nodeType":"69","messageId":"70","endLine":21,"endColumn":25},{"ruleId":"67","severity":1,"message":"86","line":61,"column":13,"nodeType":"69","messageId":"70","endLine":61,"endColumn":17},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'Card' is defined but never used.","'ListGroup' is defined but never used.","'ListGroupItem' is defined but never used.","'currentCateg' is assigned a value but never used.","'setCurrentCategs' is assigned a value but never used.","'tmp' is assigned a value but never used.","'InputGroup' is defined but never used.","'FormControl' is defined but never used.","'Form' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'foods' is assigned a value but never used.","'setFoods' is assigned a value but never used.","'name' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]